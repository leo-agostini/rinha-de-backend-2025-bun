services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
        # Obrigat√≥rio expor/usar a porta 9999 no load balancer!
      - "9999:9999"
    networks:
      - backend
      - payment-processor 
    deploy:
      resources:
        limits:
          cpus: "0.10"
          memory: "20MB"

  api1: &api
    build: .
    hostname: api1
    ports:
      - "8081:8080"
    networks:
      - backend
      - payment-processor
    environment:
      - REDIS_URL:${REDIS_URL}
      - PAYMENT_PROCESSOR_DEFAULT_URL:${PAYMENT_PROCESSOR_DEFAULT_URL}
      - PAYMENT_PROCESSOR_FALLBACK_URL:${PAYMENT_PROCESSOR_FALLBACK_URL}
      - POSTGRES_HOST:${POSTGRES_HOST}
      - POSTGRES_DATABASE:${POSTGRES_DATABASE}
      - POSTGRES_USER:${POSTGRES_USER}
      - POSTGRES_PASSWORD:${POSTGRES_PASSWORD}
      - POSTGRES_PORT:${POSTGRES_PORT}
      - APP_HOST=0.0.0.0
      - PORT=8080
      - INSTANCE_ID=API-1

    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.60"
          memory: "125MB"

  api2:
    <<: *api
    hostname: api2
    environment:
      - INSTANCE_ID=API-2
    ports:
      - "8082:8080"

  redis:
    image: redis:7.2-alpine
    container_name: rinha-redis
    ports:
      - "6379:6379"
    command: redis-server --save "" --appendonly no --maxclients 20000
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.10"
          memory: "30MB"
  postgres:
    image: postgres:16-alpine
    container_name: rinha-postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "rinha"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - backend
    environment:
      - POSTGRES_USER=rinha
      - POSTGRES_PASSWORD=rinha
      - POSTGRES_DB=rinha
    volumes:
      - "./scripts/init.sql:/docker-entrypoint-initdb.d/script.sql"
      - ./postgres-data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: "0.10"
          memory: "50MB"

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true
